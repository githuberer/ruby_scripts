#!/usr/bin/env ruby

iohome="#{ENV['HOME']}/yanyingwang.github.io"
params = [ "serve", "gal", "vim", "emacs", "new" ]

unless Dir.exist?(iohome)
  puts "\n Please set [iohome] value in #{$__FILE__} to directry where your 'username.github.io' repo located. \n"
  exit
end

unless ( ARGV[0] and params.include?(ARGV[0]) ) or ( ARGV[0] == "new" and ARGV[1] )
  puts <<-EOF
  \nUSAGE:
      #{params[0]}  => jekyll serve --watch
      #{params[1]} => git pull && git add && git commit -m nil && git push
      #{params[2]} => vim the new post
      #{params[3]} => eamcs the new post
      #{params[4]} title => new post\n
  EOF
  exit
end

option = ARGV.shift
title = ARGV.shift
rpost = `ls -t #{iohome}/_posts/ |head -1`

case option
when params[0] then exec "cd #{iohome} && jekyll serve --watch"
when params[1] then exec <<-EOF
  cd #{iohome} && (
      echo  "\n\n==============\ngit pull\n=============="
      git pull
      echo  "\n\n==============\ngit add -A . \n=============="
      git add -A .
      echo  "\n\n===============\ngit commit -a -m 'nil'\n================"
      git commit -m "nil"
      echo  "\n\n==============\ngit push\n=============="
      git push
      echo  "\n\n==============\ngit status\n=============="
      git status
  )
  EOF
when params[2] then exec "vim #{iohome}/_posts/#{rpost}"
when params[3] then exec "emacs #{iohome}/_posts/#{rpost} &> /dev/null &"
when params[4] then
  time = Time.new
  categories = %w{
      inspiration
      mylife
      mydiary
      programming
      linuxsystem
      linuxshell
      others
  }

  puts "\nPlease type in category numbers( Example: 0 1 3 ):\n"
  categories.each_index { |e| puts "#{e}, #{categories[e]}" }

  nums = gets().split("\s").map { |e| e.to_i }
  categories_post = categories.values_at(*nums)

  content = <<-EOF
---
layout: post
title: #{title}
date: #{time.strftime "%Y-%m-%d %H:%M:%S"}
categories: [ #{categories_post.join(', ')} ]
---
  \n\n\n
  EOF

  nppath = "#{iohome}/_posts/#{time.strftime '%Y-%m-%d'}-#{title.scan(/[a-zA-Z0-9\p{Han}]+/).join("-")}.markdown"
  File.open(nppath, 'w') { |f| f.write(content) }
end

